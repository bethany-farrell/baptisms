[
  {
    "op": "core/multivalued-cell-split",
    "columnName": "edits",
    "keyColumnName": "Column",
    "mode": "separator",
    "separator": "}, {",
    "regex": false,
    "description": "Split multi-valued cells in column edits"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "edits",
    "expression": "grel:value.replace(\"[{\",\"\").replace(\"}]\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column edits using expression grel:value.replace(\"[{\",\"\").replace(\"}]\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "edits",
    "expression": "grel:value.replace(\", 'fromBlank': False, 'fromError': False, \",\"|\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column edits using expression grel:value.replace(\", 'fromBlank': False, 'fromError': False, \",\"|\")"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "edits",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": "|",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column edits by separator"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "edits 1",
    "newColumnName": "from",
    "description": "Rename column edits 1 to from"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "edits 2",
    "newColumnName": "to",
    "description": "Rename column edits 2 to to"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "from",
    "expression": "grel:value.replace(\"'from': \",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column from using expression grel:value.replace(\"'from': \",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "to",
    "expression": "grel:value.replace(\"'to': \",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column to using expression grel:value.replace(\"'to': \",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "to",
    "expression": "grel:value.replace(\"'\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column to using expression grel:value.replace(\"'\",\"\")"
  },
  {
    "op": "core/row-reorder",
    "mode": "row-based",
    "sorting": {
      "criteria": [
        {
          "valueType": "string",
          "column": "to",
          "blankPosition": 2,
          "errorPosition": 1,
          "reverse": false,
          "caseSensitive": false
        },
        {
          "valueType": "string",
          "column": "from",
          "blankPosition": 2,
          "errorPosition": 1,
          "reverse": false,
          "caseSensitive": false
        }
      ]
    },
    "description": "Reorder rows"
  },
  {
    "op": "core/blank-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "from",
    "description": "Blank down cells in column from"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "from",
          "expression": "isBlank(value)",
          "columnName": "from",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/column-removal",
    "columnName": "Column",
    "description": "Remove column Column"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "from",
    "expression": "grel:value.replace(\"[\",\"\").replace(\"]\",\"\").replace(\"'\",\"\").replace('\"',\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column from using expression grel:value.replace(\"[\",\"\").replace(\"]\",\"\").replace(\"'\",\"\").replace('\"',\"\")"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "from",
    "keyColumnName": "from",
    "mode": "separator",
    "separator": ",",
    "regex": false,
    "description": "Split multi-valued cells in column from"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "to",
    "description": "Fill down cells in column to"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "from",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column from using expression value.trim()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "to",
    "expression": "grel:cells['from'].value+value",
    "onError": "set-to-blank",
    "newColumnName": "check_dupe",
    "columnInsertIndex": 2,
    "description": "Create column check_dupe at index 2 based on column to using expression grel:cells['from'].value+value"
  },
  {
    "op": "core/row-reorder",
    "mode": "row-based",
    "sorting": {
      "criteria": [
        {
          "valueType": "string",
          "column": "check_dupe",
          "blankPosition": 2,
          "errorPosition": 1,
          "reverse": false,
          "caseSensitive": false
        }
      ]
    },
    "description": "Reorder rows"
  },
  {
    "op": "core/blank-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "check_dupe",
    "description": "Blank down cells in column check_dupe"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "check_dupe",
          "expression": "isBlank(value)",
          "columnName": "check_dupe",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-reorder",
    "mode": "row-based",
    "sorting": {
      "criteria": [
        {
          "valueType": "string",
          "column": "from",
          "blankPosition": 2,
          "errorPosition": 1,
          "reverse": false,
          "caseSensitive": false
        }
      ]
    },
    "description": "Reorder rows"
  },
  {
    "op": "core/blank-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "from",
    "description": "Blank down cells in column from"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "from",
          "expression": "isBlank(value)",
          "columnName": "from",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-reorder",
    "mode": "row-based",
    "sorting": {
      "criteria": [
        {
          "valueType": "string",
          "column": "from",
          "blankPosition": 2,
          "errorPosition": 1,
          "reverse": false,
          "caseSensitive": false
        }
      ]
    },
    "description": "Reorder rows"
  },
  {
    "op": "core/blank-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "from",
    "description": "Blank down cells in column from"
  },
  {
    "op": "core/row-reorder",
    "mode": "row-based",
    "sorting": {
      "criteria": [
        {
          "valueType": "string",
          "column": "from",
          "blankPosition": 2,
          "errorPosition": 1,
          "reverse": false,
          "caseSensitive": false
        }
      ]
    },
    "description": "Reorder rows"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "from",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column from using expression value.trim()"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Starred Rows",
          "expression": "row.starred",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-reorder",
    "mode": "row-based",
    "sorting": {
      "criteria": [
        {
          "valueType": "string",
          "column": "check_dupe",
          "blankPosition": 2,
          "errorPosition": 1,
          "reverse": false,
          "caseSensitive": true
        }
      ]
    },
    "description": "Reorder rows"
  },
  {
    "op": "core/blank-down",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "from",
          "expression": "value",
          "columnName": "from",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "brando",
                "l": "brando"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "from",
    "description": "Blank down cells in column from"
  },
  {
    "op": "core/blank-down",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "from",
          "expression": "value",
          "columnName": "from",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Van Waart",
                "l": "Van Waart"
              }
            },
            {
              "v": {
                "v": "Brando",
                "l": "Brando"
              }
            },
            {
              "v": {
                "v": "brando",
                "l": "brando"
              }
            },
            {
              "v": {
                "v": "Tol",
                "l": "Tol"
              }
            },
            {
              "v": {
                "v": "van der Beek",
                "l": "van der Beek"
              }
            },
            {
              "v": {
                "v": "Broek",
                "l": "Broek"
              }
            },
            {
              "v": {
                "v": "de Revier",
                "l": "de Revier"
              }
            },
            {
              "v": {
                "v": "Angola",
                "l": "Angola"
              }
            },
            {
              "v": {
                "v": "Brakel",
                "l": "Brakel"
              }
            },
            {
              "v": {
                "v": "Van Waert",
                "l": "Van Waert"
              }
            },
            {
              "v": {
                "v": "van de Venter",
                "l": "van de Venter"
              }
            },
            {
              "v": {
                "v": "Lagrange",
                "l": "Lagrange"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "from",
    "description": "Blank down cells in column from"
  },
  {
    "op": "core/blank-down",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "from",
          "expression": "value",
          "columnName": "from",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Brando",
                "l": "Brando"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "from",
    "description": "Blank down cells in column from"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "from",
          "expression": "isBlank(value)",
          "columnName": "from",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "to",
    "expression": "grel:value == cells['from'].value",
    "onError": "set-to-blank",
    "newColumnName": "eq",
    "columnInsertIndex": 2,
    "description": "Create column eq at index 2 based on column to using expression grel:value == cells['from'].value"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "eq",
          "expression": "value",
          "columnName": "eq",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/column-removal",
    "columnName": "eq",
    "description": "Remove column eq"
  },
  {
    "op": "core/column-removal",
    "columnName": "check_dupe",
    "description": "Remove column check_dupe"
  }
]